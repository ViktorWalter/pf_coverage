# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav0; export RUN_TYPE=simulation; export UAV_TYPE=x500
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=grass_plane gui:=true
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav0; waitForHw; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_status status.launch
        # - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_status status.launch
        # - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn  "0 --$UAV_TYPE --pos-file $(rospack find uvdar_core)/scripts/position1.csv --enable-rangefinder --enable-uv-leds signal_id:=[0,1,2,3] --enable-ground-truth --enable-dual-uv-cameras calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt --enable-back-uv-camera calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt"
        - waitForGazebo; sleep 12; rosservice call /mrs_drone_spawner/spawn  "1 --$UAV_TYPE --pos-file $(rospack find uvdar_core)/scripts/position2.csv --enable-rangefinder --enable-uv-leds signal_id:=[4,5,6,7] --enable-ground-truth --enable-dual-uv-cameras calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt --enable-back-uv-camera calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt"
        # - waitForGazebo; sleep 24; rosservice call /mrs_drone_spawner/spawn  "2 --$UAV_TYPE --pos-file $(rospack find uvdar_core)/scripts/position3.csv --enable-rangefinder --enable-uv-leds signal_id:=[8,9,10,11] --enable-ground-truth --enable-dual-uv-cameras calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt --enable-back-uv-camera calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt"
        # - waitForGazebo; sleep 36; rosservice call /mrs_drone_spawner/spawn  "3 --$UAV_TYPE --pos-file $(rospack find uvdar_core)/scripts/position4.csv --enable-rangefinder --enable-uv-leds signal_id:=[12,13,14,15] --enable-ground-truth --enable-dual-uv-cameras calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt --enable-back-uv-camera calib_file:=$(rospack find uvdar_core)/config/ocamcalib/calib_results_bf_uv_fe.txt"
  - hw_api:
      layout: tiled
      panes:
        - export UAV_NAME=uav0; waitForTime; roslaunch mrs_uav_px4_api api.launch
        - export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_px4_api api.launch
        # - export UAV_NAME=uav2; waitForTime; roslaunch mrs_uav_px4_api api.launch
        # - export UAV_NAME=uav3; waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - export UAV_NAME=uav0; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml                   
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        # - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_core core.launch
        #   platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
        #   custom_config:=./config/custom_config.yaml
        #   world_config:=./config/world_config.yaml                   
        #   network_config:=./config/network_config.yaml
        # - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_core core.launch
        #   platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
        #   custom_config:=./config/custom_config.yaml
        #   world_config:=./config/world_config.yaml
        #   network_config:=./config/network_config.yaml
  - takeoff:
      layout: tiled
      panes:
        - export UAV_NAME=uav0; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'export UAV_NAME=uav0; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'export UAV_NAME=uav1; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        # - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        # - 'export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        # - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        # - 'export UAV_NAME=uav3; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  - uv_observer:
        layout: even-vertical
        panes:
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav0; waitForControl; roslaunch pf_coverage uvdar_local.launch use_4DHT:=false
        - waitForCompile; gz world --pause=0; sleep 16;  export UAV_NAME=uav1; waitForControl; roslaunch pf_coverage uvdar_local.launch use_4DHT:=false
        # - waitForCompile; gz world --pause=0; sleep 26;  export UAV_NAME=uav2; waitForControl; roslaunch pf_coverage uvdar_local.launch use_4DHT:=false
        # - waitForCompile; gz world --pause=0; sleep 36;  export UAV_NAME=uav3; waitForControl; roslaunch pf_coverage uvdar_local.launch use_4DHT:=false
  - slow_down:
      layout: even-vertical
      panes:
        - waitForGazebo; waitForRos; sleep 20; gz physics -u 80
  # - trajectories:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav0; history -s rosservice call /'"$UAV_NAME"'/control_manager/start_trajectory_tracking; history -s rosservice call /'"$UAV_NAME"'/control_manager/goto_trajectory_start; history -s roslaunch uvdar_core load_trajectory.launch file:="tx1/line.txt" loop:=true
  #       - export UAV_NAME=uav1; history -s rosservice call /'"$UAV_NAME"'/control_manager/start_trajectory_tracking; history -s rosservice call /'"$UAV_NAME"'/control_manager/goto_trajectory_start; history -s roslaunch uvdar_core load_trajectory.launch file:="tx2/line.txt" loop:=true
        # - export UAV_NAME=uav3; history -s rosservice call /'"$UAV_NAME"'/control_manager/start_trajectory_tracking; history -s rosservice call /'"$UAV_NAME"'/control_manager/goto_trajectory_start; history -s roslaunch uvdar_core load_trajectory.launch file:="two_tx/tx2_fly_by.txt" loop:=true
  # - rviz:
  #     layout: even-vertical
  #     panes:
  #     - waitForGazebo; rviz -d $(rospack find uvdar_core)/rviz/two_drone_visualization.rviz
  - initial_position:
      layout: even-vertical
      panes:
        - 'export UAV_NAME=uav0; waitForControl; sleep 30; rosservice call /$UAV_NAME/control_manager/goto "goal: [-3.0, 3.0, 3.0, -0.785]"'
        - 'export UAV_NAME=uav1; waitForControl; sleep 30; rosservice call /$UAV_NAME/control_manager/goto "goal: [-3.0, -3.0, 3.0, 0.785]"'
  - run_pf_coverage:
      layout: tiled
      panes:
        - history -s roslaunch pf_coverage mrs_pf_coverage.launch

  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
